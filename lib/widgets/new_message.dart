import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class NewMessage extends StatefulWidget {
  const NewMessage({super.key});

  @override
  State<NewMessage> createState() {
    return _NewMessageState();
  }
}

class _NewMessageState extends State<NewMessage> {
  final _messageController = TextEditingController();

  @override
  void dispose() {
    _messageController.dispose();

    super.dispose();
  }

  void _submitMessage() async {
    final enteredMessage = _messageController.text;

    // Checking TextField input
    if (enteredMessage.trim().isEmpty) {
      return;
    }

    // Closing keyboard after sending the message
    FocusScope.of(context).unfocus();

    // Resetting the input (TextField set back to empty TextField again)
    _messageController.clear();

    // Currently logged in user
    final user = FirebaseAuth.instance.currentUser!;

    // Retrieving data from Firebase (Firestore)
    final userData = await FirebaseFirestore.instance
        .collection('users')
        .doc(user.uid)
        .get();

    // // Sending data to Firebase (Firestore)
    // FirebaseFirestore.instance.collection('chat').doc(userData.id).set({
    //   'text': enteredMessage,
    //   'createdAt': Timestamp.now(),
    //   'userId': user.uid, // Current user's id
    //   'username': userData.data()!['username'],
    //   'userImage': userData.data()!['image_url'],
    // });

    // Alternative way to send data to Firebase (Firestore)
    // In this alternative way, unique id generated by Firebase, not by developer.
    FirebaseFirestore.instance.collection('chat').add({
      'text': enteredMessage,
      'createdAt': Timestamp.now(),
      'userId': user.uid, // Current user's id
      'username': userData.data()!['username'],
      'userImage': userData.data()!['image_url'],
    });
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(
        left: 15,
        right: 10,
        bottom: 20,
      ),
      child: Row(
        children: [
          Expanded(
            child: TextField(
              controller: _messageController,
              textCapitalization: TextCapitalization.sentences,
              autocorrect: true,
              enableSuggestions: true,
              decoration: const InputDecoration(
                label: Text('Send a Message...'),
              ),
            ),
          ),
          Container(
            margin: const EdgeInsets.fromLTRB(14, 15, 7, 0),
            width: 40,
            height: 40,
            decoration: BoxDecoration(
              border: Border.all(
                color: Colors.grey,
                width: 2,
              ),
              borderRadius: BorderRadius.circular(50),
              color: const Color.fromARGB(255, 199, 252, 255),
            ),
            child: IconButton(
              iconSize: 23,
              icon: const Icon(Icons.send),
              color: Theme.of(context).colorScheme.primary,
              onPressed: _submitMessage,
              padding: const EdgeInsets.only(left: 5),
            ),
          ),
        ],
      ),
    );
  }
}
